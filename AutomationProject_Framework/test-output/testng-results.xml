<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="6" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-02-06T10:52:32 IST" name="Suite" finished-at="2024-02-06T10:52:42 IST" duration-ms="10410">
    <groups>
      <group name="Sanity">
        <method signature="TestCase1.Search()[pri:1, instance:testcases.TestCase1@1e66f1f5]" name="Search" class="testcases.TestCase1"/>
        <method signature="TestCase1.Buy()[pri:2, instance:testcases.TestCase1@1e66f1f5]" name="Buy" class="testcases.TestCase1"/>
        <method signature="assertClass.Openbrowser()[pri:1, instance:testcases.assertClass@1f2f9244]" name="Openbrowser" class="testcases.assertClass"/>
      </group> <!-- Sanity -->
      <group name="Smoke">
        <method signature="TestCase1.Buy()[pri:2, instance:testcases.TestCase1@1e66f1f5]" name="Buy" class="testcases.TestCase1"/>
        <method signature="TestCaseAnnotations.test1()[pri:0, instance:testcases.TestCaseAnnotations@3571b748]" name="test1" class="testcases.TestCaseAnnotations"/>
        <method signature="assertClass.softAssert()[pri:0, instance:testcases.assertClass@1f2f9244]" name="softAssert" class="testcases.assertClass"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2024-02-06T10:52:32 IST" name="Test" finished-at="2024-02-06T10:52:32 IST" duration-ms="113">
      <class name="testcases.TestCase1">
        <test-method is-config="true" signature="Open()[pri:0, instance:testcases.TestCase1@1e66f1f5]" started-at="2024-02-06T10:52:32 IST" name="Open" finished-at="2024-02-06T10:52:32 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Open -->
        <test-method is-config="true" signature="Login()[pri:0, instance:testcases.TestCase1@1e66f1f5]" started-at="2024-02-06T10:52:32 IST" name="Login" finished-at="2024-02-06T10:52:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method signature="Search()[pri:1, instance:testcases.TestCase1@1e66f1f5]" started-at="2024-02-06T10:52:32 IST" name="Search" finished-at="2024-02-06T10:52:32 IST" duration-ms="36" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Search -->
        <test-method is-config="true" signature="LogOut()[pri:0, instance:testcases.TestCase1@1e66f1f5]" started-at="2024-02-06T10:52:32 IST" name="LogOut" finished-at="2024-02-06T10:52:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LogOut -->
        <test-method is-config="true" signature="Login()[pri:0, instance:testcases.TestCase1@1e66f1f5]" started-at="2024-02-06T10:52:32 IST" name="Login" finished-at="2024-02-06T10:52:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method signature="Buy()[pri:2, instance:testcases.TestCase1@1e66f1f5]" started-at="2024-02-06T10:52:32 IST" name="Buy" finished-at="2024-02-06T10:52:32 IST" depends-on-methods="testcases.TestCase1.Search" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Buy -->
        <test-method is-config="true" signature="LogOut()[pri:0, instance:testcases.TestCase1@1e66f1f5]" started-at="2024-02-06T10:52:32 IST" name="LogOut" finished-at="2024-02-06T10:52:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LogOut -->
        <test-method is-config="true" signature="Close()[pri:0, instance:testcases.TestCase1@1e66f1f5]" started-at="2024-02-06T10:52:32 IST" name="Close" finished-at="2024-02-06T10:52:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Close -->
      </class> <!-- testcases.TestCase1 -->
    </test> <!-- Test -->
    <test started-at="2024-02-06T10:52:33 IST" name="Annotation Test" finished-at="2024-02-06T10:52:33 IST" duration-ms="37">
      <class name="testcases.TestCaseAnnotations">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:testcases.TestCaseAnnotations@3571b748]" started-at="2024-02-06T10:52:33 IST" name="beforeTest" finished-at="2024-02-06T10:52:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:testcases.TestCaseAnnotations@3571b748]" started-at="2024-02-06T10:52:33 IST" name="beforeClass" finished-at="2024-02-06T10:52:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testcases.TestCaseAnnotations@3571b748]" started-at="2024-02-06T10:52:33 IST" name="beforeMethod" finished-at="2024-02-06T10:52:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test1()[pri:0, instance:testcases.TestCaseAnnotations@3571b748]" started-at="2024-02-06T10:52:33 IST" name="test1" finished-at="2024-02-06T10:52:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testcases.TestCaseAnnotations@3571b748]" started-at="2024-02-06T10:52:33 IST" name="afterMethod" finished-at="2024-02-06T10:52:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testcases.TestCaseAnnotations@3571b748]" started-at="2024-02-06T10:52:33 IST" name="beforeMethod" finished-at="2024-02-06T10:52:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test2()[pri:0, instance:testcases.TestCaseAnnotations@3571b748]" started-at="2024-02-06T10:52:33 IST" name="test2" finished-at="2024-02-06T10:52:33 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testcases.TestCaseAnnotations@3571b748]" started-at="2024-02-06T10:52:33 IST" name="afterMethod" finished-at="2024-02-06T10:52:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testcases.TestCaseAnnotations@3571b748]" started-at="2024-02-06T10:52:33 IST" name="afterClass" finished-at="2024-02-06T10:52:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:testcases.TestCaseAnnotations@3571b748]" started-at="2024-02-06T10:52:33 IST" name="afterTest" finished-at="2024-02-06T10:52:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- testcases.TestCaseAnnotations -->
    </test> <!-- Annotation Test -->
    <test started-at="2024-02-06T10:52:33 IST" name="Assertion Test" finished-at="2024-02-06T10:52:42 IST" duration-ms="9706">
      <class name="testcases.TestCaseAnnotations">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:testcases.TestCaseAnnotations@3571b748]" started-at="2024-02-06T10:52:32 IST" name="beforeSuite" finished-at="2024-02-06T10:52:32 IST" duration-ms="28" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:testcases.TestCaseAnnotations@3571b748]" started-at="2024-02-06T10:52:42 IST" name="afterSuite" finished-at="2024-02-06T10:52:42 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- testcases.TestCaseAnnotations -->
      <class name="testcases.assertClass">
        <test-method signature="softAssert()[pri:0, instance:testcases.assertClass@1f2f9244]" started-at="2024-02-06T10:52:33 IST" name="softAssert" finished-at="2024-02-06T10:52:35 IST" duration-ms="2548" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
did not expect [Most Reliable App & Cross Browser Testing Platform | BrowserStack] but found [Most Reliable App & Cross Browser Testing Platform | BrowserStack],
expected [null] but found [true],
First soft assert failed expected [true] but found [false],
Second soft assert failed expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
did not expect [Most Reliable App & Cross Browser Testing Platform | BrowserStack] but found [Most Reliable App & Cross Browser Testing Platform | BrowserStack],
expected [null] but found [true],
First soft assert failed expected [true] but found [false],
Second soft assert failed expected [false] but found [true]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at testcases.assertClass.softAssert(assertClass.java:74)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- softAssert -->
        <test-method signature="Openbrowser()[pri:1, instance:testcases.assertClass@1f2f9244]" started-at="2024-02-06T10:52:35 IST" name="Openbrowser" finished-at="2024-02-06T10:52:41 IST" duration-ms="5284" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Openbrowser -->
        <test-method signature="verifytext()[pri:2, instance:testcases.assertClass@1f2f9244]" started-at="2024-02-06T10:52:41 IST" name="verifytext" finished-at="2024-02-06T10:52:41 IST" duration-ms="141" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifytext -->
        <test-method signature="softassert()[pri:3, instance:testcases.assertClass@1f2f9244]" started-at="2024-02-06T10:52:41 IST" name="softassert" finished-at="2024-02-06T10:52:42 IST" duration-ms="1711" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <h5>...</h5> is not clickable at point (141, 595). Other element would receive the click: <div id="fixedban" style="width:100%;margin:auto;text-align:center;float:none;overflow:hidden;display:scroll;position:fixed;bottom:0;z-index:9999999">...</div>
  (Session info: chrome=121.0.6167.140)
Build info: version: '4.17.0', revision: 'e52b1be057*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '20.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [d2d92b0d50fe2e5eeb969b2f40570898, clickElement {id=817D28F3138B885434C1C6F4A61F82F8_element_28}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 121.0.6167.140, chrome: {chromedriverVersion: 121.0.6167.85 (3f98d690ad7e..., userDataDir: C:\Users\SURAJG~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:54670}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:54670/devtoo..., se:cdpVersion: 121.0.6167.140, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (d2d92b0d50fe2e5eeb969b2f40570898)] -> xpath: //h5[text()='Elements']]
Session ID: d2d92b0d50fe2e5eeb969b2f40570898]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <h5>...</h5> is not clickable at point (141, 595). Other element would receive the click: <div id="fixedban" style="width:100%;margin:auto;text-align:center;float:none;overflow:hidden;display:scroll;position:fixed;bottom:0;z-index:9999999">...</div>
  (Session info: chrome=121.0.6167.140)
Build info: version: '4.17.0', revision: 'e52b1be057*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '20.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [d2d92b0d50fe2e5eeb969b2f40570898, clickElement {id=817D28F3138B885434C1C6F4A61F82F8_element_28}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 121.0.6167.140, chrome: {chromedriverVersion: 121.0.6167.85 (3f98d690ad7e..., userDataDir: C:\Users\SURAJG~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:54670}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:54670/devtoo..., se:cdpVersion: 121.0.6167.140, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (d2d92b0d50fe2e5eeb969b2f40570898)] -> xpath: //h5[text()='Elements']]
Session ID: d2d92b0d50fe2e5eeb969b2f40570898
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:185)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:134)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:519)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:76)
at testcases.assertClass.softassert(assertClass.java:51)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- softassert -->
      </class> <!-- testcases.assertClass -->
    </test> <!-- Assertion Test -->
  </suite> <!-- Suite -->
</testng-results>
